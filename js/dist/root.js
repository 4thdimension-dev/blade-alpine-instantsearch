var BladeAlpineInstantSearch=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self,function(t,n){var e,r,i,o,a,u,c;e=function(){if(!window.Alpine)throw new Error("[Magic Helpers] Alpine is required for the magic helpers to function correctly.");if(!window.Alpine.version||!function(t,n){for(var e="2.5.0".split("."),r=n.split("."),i=0;i<e.length;i++)if(!r[i]||parseInt(r[i])<parseInt(e[i]))return!1;return!0}(0,window.Alpine.version))throw new Error("Invalid Alpine version. Please use Alpine version 2.5.0 or above")},r=function(t,n,e){return n.getAttribute("x-bind:data-last-refresh")||n.setAttribute("x-bind:data-last-refresh","Date.now()"),new Proxy(t,function t(r){return void 0===r&&(r=null),{get:function(n,e){return null!==n[e]&&"object"==typeof n[e]?new Proxy(n[e],t(r?r+"."+e:e)):n[e]},set:function(t,i,o){if(!n.__x)throw new Error("Error communicating with observed component");return e.call(n,n.__x.$data,r?r+"."+i:i,o),!0}}}())},i=function(t,n){t.getAttribute("x-bind:data-last-refresh")||t.setAttribute("x-bind:data-last-refresh","Date.now()"),new MutationObserver(function(e){for(var r=0;r<e.length;r++){var i=e[r].target.closest("[x-data]");if(!i||i.isSameNode(t))return void n()}}).observe(t,{attributes:!0,childList:!0,subtree:!0})},o=function(t,n,e){return(n=n.toString().match(/[^.[\]]+/g)||[]).slice(0,-1).reduce(function(t,e,r){return Object(t[e])!==t[e]&&(t[e]=Math.abs(n[r+1])>>0==+n[r+1]?[]:{}),t[e]},t)[n[n.length-1]]=e,t},a=function(t){return t.__x?t.__x.getUnobservedData():(n=t.getAttribute("x-data"),e=t,void 0===r&&(r={}),"function"==typeof n?n.call(e):new Function(["$data"].concat(Object.keys(r)),"var __alpine_result; with($data) { __alpine_result = "+n+" }; return __alpine_result").apply(void 0,[e].concat(Object.values(r))));var n,e,r},u={start:function(){e(),Alpine.addMagicProperty("parent",function(t){if(void 0!==t.$parent)return t.$parent;var n=t.parentNode.closest("[x-data]");if(!n)throw new Error("Parent component not found");return t.$parent=r(a(n),n,o),i(n,function(){t.$parent=r(n.__x.getUnobservedData(),n,o),t.__x.updateElements(t)}),t.$parent}),Alpine.addMagicProperty("component",function(t){return function(n){var e=this;if(void 0!==this[n])return this[n];var u=document.querySelector('[x-data][x-id="'+n+'"], [x-data]#'+n);if(!u)throw new Error("Component not found");return this[n]=r(a(u),u,o),i(u,function(){e[n]=r(u.__x.getUnobservedData(),u,o),t.__x.updateElements(t)}),this[n]}})}},c=window.deferLoadingAlpine||function(t){return t()},window.deferLoadingAlpine=function(t){c(t),u.start()}}(),function(t,n,e){var r=function(){return{search:"",algolia:null,hits:[],widgetState:{},init:function(){var e=this,r=JSON.parse(this.$el.dataset.config),i=t(r.id,r.key);this.algolia=n({indexName:r.index,searchClient:i});var o=r.widgets.map(function(t){return e.connectWidget(t)});this.algolia.addWidgets(o),setTimeout(function(){return e.algolia.start()},1)},getWidgetState:function(t,n,e){void 0===e&&(e={});var r=n.split(".");r.unshift(t);try{return r.reduce(function(t,n){if(!(n in t))throw!1;return t[n]},this.widgetState)}catch(t){return e}},connectWidget:function(t){var n=this,r="connect"+t.name,i=r in this?this[r].call(this,t):function(e){return n.widgetState[t.id]=e};return e[r](i)(t.config)},connectSearchBox:function(t){var n=this;return function(t,e){var r=t.query,i=t.refine;e&&n.$watch("search",function(t){return i(t)}),n.search=r}},connectHits:function(t){var n=this;return function(t){return n.hits=t.hits}}}};return r.widget=function(t){return{init:function(){console.log(this.$parent.widgetState)}}},r}(window.algoliasearch,window.instantsearch,window.instantsearch.connectors));
