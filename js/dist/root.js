var BladeAlpineInstantSearch=function(){function n(){return(n=Object.assign||function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(n[i]=e[i])}return n}).apply(this,arguments)}return function(t,e,i){var r=function(r,a){var c=JSON.parse(a),o=c.applicationId,s=c.searchKey,u=function(n,t){if(null==n)return{};var e,i,r={},a=Object.keys(n);for(i=0;i<a.length;i++)t.indexOf(e=a[i])>=0||(r[e]=n[e]);return r}(c,["applicationId","searchKey"]),l=t(o,s),d=[];return r.addBladeAlpineInstantSearchWidget=function(n){return d.push(n)},{algolia:null,widgets:[],init:function(){var t=this;this.algolia=e(n({searchClient:l},u)),this.widgets=d.map(function(n){return t.connectWidget(n)}),this.algolia.addWidgets(this.widgets),this.algolia.start()},connectWidget:function(n){var t=this,e="connect"+n.name;return i[e](function(i,r){e in t&&t[e](i,r),n.connect(i,r)})(n.config)}}};return r.widget=function(t,i,r,a){return n({},a,{name:i,config:JSON.parse(r),first_render:!0,instantsearch:e,init:function(){t.parentNode.closest("[data-instantsearch-context]").addBladeAlpineInstantSearchWidget(this)},connect:function(n,t){var e=this;this.first_render=t,Object.entries(n).forEach(function(n){return e[n[0]]=n[1]})}})},r}(window.algoliasearch,window.instantsearch,window.instantsearch.connectors)}();
